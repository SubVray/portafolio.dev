---
import type { Preload } from "@/types/Preload"
import "@fontsource/poppins/100.css"
import "@fontsource/poppins/200.css"
import "@fontsource/poppins/300.css"
import "@fontsource/poppins/400.css"
import "@fontsource/poppins/500.css"
import "@fontsource/poppins/600.css"
import "@fontsource/poppins/700.css"
import "@fontsource/poppins/800.css"
import "@fontsource/poppins/900.css"
import ViewTransitions from "astro/components/ViewTransitions.astro"

interface Props {
	title?: string
	description?: string
	preload?: Array<Preload>
	canonical?: string
	image?: string
}

const { title, description, preload, canonical, image } = Astro.props
---

<!doctype html>
<html lang="en" class="dark">
	<head>
		<link rel="preload" as="image" href="/bg-dark.svg" />
		<ViewTransitions />
	</head>
	<body>
		<slot />
	</body>
</html>

<style is:global>
	/* styles.css */
	body {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 90vh;
		margin: 0;
		border: 5px solid red;
	}

	#gameBoard {
		display: grid;
	}

	.box {
		width: 100%;
		height: 100%;
		border-radius: 10%;
		overflow: hidden;
		transition: transform 0.5s ease; /* Cambia el tiempo de la transición según sea necesario */
	}

	.cell {
		width: 50px;
		height: 50px;
		display: flex;
		justify-content: center;
		align-items: center;
		border: 1px solid black;
		padding: 4px;
	}

	.cell.floor {
		box-shadow: 5px 5px 1px black;
	}

	.space {
		width: 100%;
		height: 100%;
		border: 0px solid transparent;
	}

	.player {
		width: 100%;
		height: 100%;
		background-color: red;
		position: relative; /* Asegúrate de que el jugador tenga una posición relativa para la transformación */
	}

	.obstacle {
		width: 100%;
		height: 100%;
		background-color: black;
	}

	.empty {
		width: 100%;
		height: 100%;
		background-color: white;
	}

	.goal {
		width: 100%;
		height: 100%;
		background-color: green;
	}

	.moving {
		transition: transform 10s ease; /* Cambia el tiempo de la transición según sea necesario */
	}
</style>
